machine:
  environment:
    # GOROOT is not set by default
    GOROOT: ""
    PATH: "/usr/local/go/bin:/usr/local/go_workspace/bin:~/.go_workspace/bin:${PATH}"
    GOPATH: "${HOME}/.go_workspace:/usr/local/go_workspace:${HOME}/.go_project"
    IMPORT_PATH: "github.com/geodatalake/lambdas"

  services:
    - docker

dependencies:
  pre:
    - go get -u github.com/golang/geo/s2
    - go get -u golang.org/x/image/tiff
    - go get -u golang.org/x/image/tiff/lzw
    - go get -u github.com/dustin/go-humanize
    - go get -u gopkg.in/olivere/elastic.v5
    - go get -u github.com/aws/aws-sdk-go/aws
    - go get -u github.com/aws/aws-sdk-go/aws/session
    - go get -u github.com/aws/aws-sdk-go/service/s3
    - go get -u github.com/satori/go.uuid
    - go get -u github.com/ctessum/geom
    - go get -u github.com/smartystreets/go-aws-auth
  override:
    - rm -rf ${HOME}/.go_workspace/src/github.com/geodatalake/
    - mkdir -p ~/.go_workspace/src/github.com/geodatalake
    - ln -s ${HOME}/${CIRCLE_PROJECT_REPONAME} ${HOME}/.go_workspace/src/github.com/geodatalake/

  post:
    - go build $IMPORT_PATH/geotiff
    - go build $IMPORT_PATH/lidar
    - go build $IMPORT_PATH/bucket
    - go build $IMPORT_PATH/datalake
    - go build $IMPORT_PATH/elastichelper
    - go build $IMPORT_PATH/proj4support
    - go build $IMPORT_PATH/cmd/elastictest
    - go build $IMPORT_PATH/raster
    - go build $IMPORT_PATH/vector
    - go build $IMPORT_PATH/geoindex
    - go build $IMPORT_PATH/scale
    - GOOS=linux go build -a -ldflags '-s' $IMPORT_PATH/cmd/detector
    - cp detector $CIRCLE_ARTIFACTS
    - GOOS=linux go build -a -ldflags '-s' $IMPORT_PATH/cmd/extractbucket
    - cp extractbucket $CIRCLE_ARTIFACTS
    - GOOS=linux go build -a -ldflags '-s' $IMPORT_PATH/cmd/filegrouper
    - cp filegrouper $CIRCLE_ARTIFACTS
    - GOOS=linux go build -a -ldflags '-s' $IMPORT_PATH/cmd/reprojectbounds
    - cp reprojectbounds $CIRCLE_ARTIFACTS
    - GOOS=linux go build -a -ldflags '-s' $IMPORT_PATH/cmd/elastictest
    - cp elastictest $CIRCLE_ARTIFACTS

test:
  pre:
    - go vet $IMPORT_PATH/geotiff
    - go vet $IMPORT_PATH/lidar
    - go vet $IMPORT_PATH/bucket
    - go vet $IMPORT_PATH/elastichelper
    - go vet $IMPORT_PATH/datalake
    - go vet $IMPORT_PATH/proj4support
    - go vet $IMPORT_PATH/raster
    - go vet $IMPORT_PATH/vector
    - go vet $IMPORT_PATH/geoindex
    - go vet $IMPORT_PATH/scale
    - go vet $IMPORT_PATH/cmd/detector
    - go vet $IMPORT_PATH/cmd/extractbucket
    - go vet $IMPORT_PATH/cmd/filegrouper
    - go vet $IMPORT_PATH/cmd/reprojectbounds
    - go vet $IMPORT_PATH/cmd/elastictest

  override:
    - go test $IMPORT_PATH/geotiff
    - go test $IMPORT_PATH/bucket
    - go test $IMPORT_PATH/datalake
    - go test $IMPORT_PATH/scale
    - go test $IMPORT_PATH/proj4support

deployment:
  dev:
    branch: develop
    owner: geodatalake
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASSWORD
      - cp detector cmd/detector
      - docker build -t scale-detector cmd/detector
      - docker tag -f scale-detector openwhere/scale-detector:dev
      - docker push openwhere/scale-detector:dev
      - cp extractbucket cmd/extractbucket
      - docker build -t scale-extract-bucket cmd/extractbucket
      - docker tag -f scale-extract-bucket openwhere/scale-extract-bucket:dev
      - docker push openwhere/scale-extract-bucket:dev
      - cp filegrouper cmd/filegrouper
      - docker build -t scale-file-grouper cmd/filegrouper
      - docker tag -f scale-file-grouper openwhere/scale-file-grouper:dev
      - docker push openwhere/scale-file-grouper:dev
      - cp reprojectbounds cmd/reprojectbounds
      - docker build -t scale-reproject cmd/reprojectbounds
      - docker tag -f scale-reproject openwhere/scale-reproject:dev
      - docker push openwhere/scale-reproject:dev

    branch: develop
    owner: owsi
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASSWORD
      - cp detector cmd/detector
      - docker build -t scale-detector cmd/detector
      - docker tag -f scale-detector openwhere/scale-detector:dev
      - docker push openwhere/scale-detector:dev
      - cp extractbucket cmd/extractbucket
      - docker build -t scale-extract-bucket cmd/extractbucket
      - docker tag -f scale-extract-bucket openwhere/scale-extract-bucket:dev
      - docker push openwhere/scale-extract-bucket:dev
      - cp filegrouper cmd/filegrouper
      - docker build -t scale-file-grouper cmd/filegrouper
      - docker tag -f scale-file-grouper openwhere/scale-file-grouper:dev
      - docker push openwhere/scale-file-grouper:dev
      - cp reprojectbounds cmd/reprojectbounds
      - docker build -t scale-reproject cmd/reprojectbounds
      - docker tag -f scale-reproject openwhere/scale-reproject:dev
      - docker push openwhere/scale-reproject:dev
